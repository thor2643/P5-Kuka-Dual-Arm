[
    {
        "type": "function",
        "function": {
            "name": "stop_message_looping",
            "description": "Important function for multiple function calls, where the outputs from one function are needed for the next function. It is enabled by default, which means you will receive the outputs and be able to call a new function without the the need to reply to the user. When all function calls are done, you must use this function to disable the message looping. A last reply will then be generated by you and sent to the user, wherafter you must await the next command",
            "parameters": {}
        }
    },
    {
        "type": "function",
        "function": {
            "name": "get_available_objects",
            "description": "Used only to retrieve a list of objects that have predefined thresholds. This list of objects only shows which objects the find_object function is able to find and does not in any way tell what objects are currently present in the workspace. It must be called before the find_object function to ensure that the object_name parameter is indeed a valid parameter.",
            "parameters": {}
        }
    },
    {
        "type": "function",
        "function": {
            "name": "get_predefined_locations_and_poses",
            "description": "Used only to retrieve a dictionary of predefined robot poses in world coordinates for specific predefined locations. It does not move the robot",
            "parameters": {}
        }
    },
    {
        "type": "function",
        "function": {
            "name": "find_object",
            "description": "Find the object in the environment using the object detector service. The object name should be provided as an argument to this function. The object detector service will return the number of objects found as well as the Cartesian center point, width, height and orientation of each object.",
            "parameters": {
                "type": "object",
                "properties": {
                    "object_name": {
                        "type": "string",
                        "description": "The name of the object that must be found. Only one name can be provided. Must use _ (underscore) instead of spaces."
                    }
                },
                "required": ["object_name"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "define_object_thresholds",
            "description": "Lets the user define the object thresholds for the object detector service. An image will pop up with trackbars to the side, where the user can adhust the thresholds and see the resulting image. The object to define thresholds for should be provided as an argument. Use underscore _ (underscore) as spaces. The thresholds will be saved and used for the object detector service.",
            "parameters": {
                "type": "object",
                "properties": {
                    "object_name": {
                        "type": "string",
                        "description": "The name of the object for which new thresholds must be defined. Only one name can be provided. Must use _ (underscore) instead of spaces."
                    }
                },
                "required": ["object_name"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "plan_robot_trajectory",
            "description": "Plan a robot trajectory to a given pose. The planned trajectory will be simulated and visualised for the user. Planned trajectories can be executed by running the execute_planned_trajectory.",
            "parameters": {
                "type": "object",
                "properties": {
                    "pose": {
                        "type": "array",
                        "items": {"type": "number"},
                        "description": "A list of 6 floating-point numbers representing the pose of the robot arm. The first 3 numbers represent the x, y, z position and the last 3 numbers represent the roll, pitch and yaw in degrees."
                    },
                    "arm": {
                        "type": "string",
                        "description": "The arm to plan the trajectory for. Can be either 'left' or 'right'."
                    }
                },
                "required": ["pose", "arm"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "execute_planned_trajectory",
            "description": "This function executes the trajectory on the physical robot planned by the plan_robot_trajectory function. Note that the plan_robot_trajectory function must always be called before this function can be run",
            "parameters": {
                "type": "object",
                "properties": {
                    "arm": {
                        "type": "string",
                        "description": "The arm to execute the trajectory for. Can be either 'left' or 'right'."
                    }
                },
                "required": ["arm"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "get_current_pose",
            "description": "Get the current pose of the selected robot arm",
            "parameters": {
                "type": "object",
                "properties": {
                    "arm": {
                        "type": "string",
                        "enum": ["left", "right"],
                        "description": "The arm to get the current pose from. Can be either 'left' or 'right'."
                    }
                },
                "required": ["arm"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "manipulate_right_gripper",
            "description": "Adjusts the right gripper, so that it opens or closes or anywhere inbetween depending on the situation. The width, speed, and force of the gripper can be specified as an argument. The default width is 167, default speed is 110, and default force is 15. This executes at once, so do not call together with plan_robot_trajectory and expect it to first execute when executing the trajectory. In other words, only call this function after having executed a trajectory when doing pickup tasks",
            "parameters": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "number",
                        "description": "An integer representing the width of the right gripper. The range is 0-167 with 0 being fully closed and 167 being fully open. The default width is 167, and the unit is millimetres [mm]."
                    },
                    "speed": {
                        "type": "number",
                        "description": "An integer representing the speed of the right gripper. The range is 22-110 with 22 being minimum speed and 110 being maximum speed. The default speed is 110, and the unit is millimetres per second [mm/sec]."
                    },
                    "force": {
                        "type": "number",
                        "description": "An integer representing the force of the right gripper. The range is 15-60 with 15 being minimum force and 60 being maximum. The default force is 20, and the unit is Newton [N]."
                    }
                },
                "required": ["width"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "manipulate_left_gripper",
            "description": "Adjusts the left gripper, so that it opens or closes or anywhere inbetween depending on the situation. The width, speed, and force of the gripper can be specified as an argument. The width range is from 0 (closed) to 85 (open). The default width is 85, default speed is 110, and default force is 20. This executes at once, so do not call together with plan_robot_trajectory and expect it to first execute when executing the trajectory.",
            "parameters": {
                "type": "object",
                "properties": {
                    "width": {
                        "type": "number",
                        "description": "An integer representing the width of the left gripper. The range is 0-85 with 0 being fully closed and 85 being fully open. The default width is 85, and the unit is millimetres [mm]."
                    },
                    "speed": {
                        "type": "number",
                        "description": "An integer representing the speed of the left gripper. The range is 20-150 with 20 being minimum speed and 150 being maximum speed. The default speed is 110, and the unit is millimetres per second [mm/sec]."
                    },
                    "force": {
                        "type": "number",
                        "description": "An integer representing the force of the left gripper. The range is 20-235 with 20 being minimum force and 235 being maximum. The default force is 20, and the unit is Newton [N]."
                    }
                },
                "required": ["width"]
            }
        }
    },
    {
        "type": "function",
        "function": {
            "name": "find_object_yolo",
            "description": "This function uses Yolo World to find the object in the environment. This function is to be used when requested directly for yolo world or id no object was found using find_object. The object name should be provided as an argument to this function. The object detector service will return the number of objects found as well as the Cartesian center point, width, height and orientation of each object. In the case where it does not find any objects it will return a message saying what other objects was found.",
            "parameters": {
                "type": "object",
                "properties": {
                    "object_name": {
                        "type": "string",
                        "description": "The name of the object that must be found. Only one name can be provided. Must use _ (underscore) instead of spaces."
                    }
                },
                "required": ["object_name"]
            }
        }
    }
]