planning_plugin: ompl_interface/OMPLPlanner
start_state_max_bounds_error: 0.1
jiggle_fraction: 0.05

# Request adapters are plugins that can modify the request for planning. They fix common issues with the request, allowing us to set constraints.
request_adapters: >-
    default_planner_request_adapters/FixStartStateCollision
    default_planner_request_adapters/FixStartStatePathConstraints
    default_planner_request_adapters/AddTimeOptimalParameterization
    default_planner_request_adapters/FixStartStateBounds
    default_planner_request_adapters/ResolveConstraintFrames
    default_planner_request_adapters/FixWorkspaceBounds

#workspace_parameters:  // Unsure if this does anything
#  workspace_min_x: -0.1
#  workspace_min_y: -0.1
#  workspace_min_z: 0.8
#  workspace_max_x: 1.0
#  workspace_max_y: 1.0
#  workspace_max_z: 1.5
    
planner_configs: 
  RRTstar:
    type: geometric::RRTstar
    
    # Parameters for the RRTstar planner
    range: 0.1 # The maximum distance the planner will extend in the tree, in meters i think.
    goal_bias: 0.05 # The probability of sampling the goal state in the planner. Right now, the goal state is sampled with a probability of 0.3.
    delay_collision_checking: 1 # If set to true (1), collision checking is delayed until a solution path is found.
    termination_condition: CostConvergence[10,.1]  # Termination condition for the planner. The planner will stop when the last 100 solutions have improved by less than 0.0001.

  RRTconnect: 
    type: geometric::RRTConnect
    range: 0.2

  RRT: 
    type: geometric::RRT

  TRRT:
    type: geometric::TRRT
    range: 0.0  # Max motion added to tree. ==> maxDistance_ default: 0.0, if 0.0, set on setup()
    goal_bias: 0.05  # When close to goal select goal, with this probability? default: 0.05
    max_states_failed: 10  # when to start increasing temp. default: 10
    temp_change_factor: 2.0  # how much to increase or decrease temp. default: 2.0
    min_temperature: 10e-10  # lower limit of temp change. default: 10e-10
    init_temperature: 10e-6  # initial temperature. default: 10e-6
    frountier_threshold: 0.0  # dist new state to nearest neighbor to disqualify as frontier. default: 0.0 set in setup()
    frountierNodeRatio: 0.1  # 1/10, or 1 nonfrontier for every 10 frontier. default: 0.1
    k_constant: 0.0  # value used to normalize expresssion. default: 0.0 set in setup()
  
  # Potential other planners can be found in opml_planners.yaml (A document with same name), RRTstar parameters found in moveit docs. 

right_arm:
# Planner constraints
  enforce_constrained_state_space: true # Tell the planner that the state space is constrained, as defined in constraints.yaml. We can also set constraints using the cpp interface, as we have doen in robot controller.
  projection_evaluator: joints(right_A2,right_A2)  # Which joints the projection should be done on (The projector is used to calculate the manipulator configuration space, by specefying the first two joints only, this is speed up)
  
  planner_configs:
    - RRT 
    #- RRTstar  
    
    #- RRTConnect     

left_arm:
# Planner constraints
  enforce_constrained_state_space: true # Tell the planner that the state space is constrained, as defined in constraints.yaml. We can also set constraints using the cpp interface, as we have doen in robot controller.
  projection_evaluator: joints(left_A2,left_A2)  # Which joints the projection should be done on (The projector is used to calculate the manipulator configuration space, by specefying the first two joints only, this is speed up)
  
  planner_configs:
    - RRT 
  


 
  
